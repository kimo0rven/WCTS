orgID = zoho.crm.getOrgVariable("books_org_id");
//
deal = zoho.crm.getRecordById("Deals",id);
dealName = deal.get("Deal_Name");
dealInvoiceNote = deal.get("Invoice_Notes");
customerID = deal.get("Contact_Name").get("name");
closingDate = deal.get("Closing_Date");
adjustment = deal.get("Adjustment");
adjustmentReason = deal.get("Adjustment_Reason");
if(adjustmentReason == "" || adjustmentReason.isNull() || adjustmentReason.isEmpty())
{
	adjustmentReason = "Adjustment";
}
//
nameQuery = "contact_name=" + encodeUrl(customerID);
customer = zoho.books.getRecords("contacts",orgID,nameQuery,"zoho_books_connection");
customerBooksId = customer.get("contacts").get(0).get("contact_id");
//
//Get Line Items from Deal
services = deal.get("Services_Availed_Deal");
Product_Items_List = List();
//Check if due date > current date
if(closingDate > zoho.currentdate)
{
	closingDate = closingDate;
}
else
{
	closingDate = zoho.currentdate;
}
//Invoice Items
for each  service in services
{
	zBooksId = service.get("Zoho_Books_ID");
	rate = service.get("Rate");
	quantity = service.get("Quantity");
	discount = service.get("Discount");
	MAType = service.get("M_A_Type");
	if(MAType.isNull() == False) {
		MAValue = service.get("M_A_Value");
		MAQuantity = service.get("M_A_Quantity");
		if(MAType == "Multiplier") {
			rate = rate * MAValue;
		}
		if(MAType == "Adder") {
			rate = (MAQuantity * MAValue ) + rate;
		}
	}
	//
	if(discount.isNull())
	{
		discount = 0;
	}
	Product_Item_Map = Map();
	Product_Item_Map.put("item_id",zBooksId);
	Product_Item_Map.put("rate",rate);
	Product_Item_Map.put("quantity",quantity);
	Product_Item_Map.put("discount_amount",discount);
	Product_Item_Map.put("discount",discount);
	Product_Items_List.add(Product_Item_Map);
}
// info Product_Items_List;
Create_Invoice_Map = Map();
Create_Invoice_Map.put("customer_id",customerBooksId);
Create_Invoice_Map.put("line_items",Product_Items_List);
Create_Invoice_Map.put("date",zoho.currentdate);
Create_Invoice_Map.put("due_date",closingDate);
Create_Invoice_Map.put("payment_terms",0);
Create_Invoice_Map.put("payment_terms_label","Due on Receipt");
Create_Invoice_Map.put("zcrm_potential_id",id);
Create_Invoice_Map.put("subject_content","Invoice for " + dealName);
Create_Invoice_Map.put("notes",dealInvoiceNote);
Create_Invoice_Map.put("adjustment",adjustment);
Create_Invoice_Map.put("adjustment_description",adjustmentReason);
Create_Invoice_Map.put("discount_type","item_level");
createInvoice = zoho.books.createRecord("Invoices",orgID,Create_Invoice_Map,"zoho_books_connection");
info createInvoice;
return "";
